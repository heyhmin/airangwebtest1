{"version":3,"sources":["actions/types.js","reducers/auth.js","reducers/message.js","reducers/index.js","store.js","services/auth.service.js","components/login.component.js","actions/auth.js","components/register.component.js","services/auth-header.js","services/user.service.js","components/home.component.js","components/profile.component.js","components/board-user.component.js","components/board-moderator.component.js","components/board-admin.component.js","helpers/history.js","App.js","actions/message.js","serviceWorker.js","index.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_MESSAGE","CLEAR_MESSAGE","user","JSON","parse","localStorage","getItem","initialState","isLoggedIn","combineReducers","auth","state","action","type","payload","message","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","API_URL","username","password","axios","post","then","response","data","accessToken","setItem","stringify","removeItem","email","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","loading","e","this","setState","target","preventDefault","form","validateAll","dispatch","history","checkBtn","context","_errors","length","AuthService","login","Promise","resolve","error","toString","reject","push","window","location","reload","catch","to","src","alt","onSubmit","ref","c","htmlFor","name","onChange","validations","disabled","style","display","Component","connect","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","register","authHeader","get","headers","Home","content","UserService","getPublicContent","Profile","currentUser","substring","substr","id","roles","map","index","BoardUser","getUserBoard","getModeratorBoard","getAdminBoard","createBrowserHistory","App","logOut","showModeratorBoard","showAdminBoard","undefined","listen","includes","logout","href","onClick","exact","path","component","BoardModerator","BoardAdmin","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.0f67e871.chunk.js","sourcesContent":["export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n} from \"../actions/types\";\r\n\r\nconst user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\nconst initialState = user\r\n  ? { isLoggedIn: true, user }\r\n  : { isLoggedIn: false, user: null };\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: payload.user,\r\n      };\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport message from \"./message\";\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  message,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:8080/api/auth/\";\r\n\r\nclass AuthService {\r\n  login(username, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", { username, password })\r\n      .then((response) => {\r\n        if (response.data.accessToken) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(username, email, password) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      username,\r\n      email,\r\n      password,\r\n    });\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    const { dispatch, history } = this.props;\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      dispatch(login(this.state.username, this.state.password))\r\n        .then(() => {\r\n          history.push(\"/profile\");\r\n          window.location.reload();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            loading: false\r\n          });\r\n        });\r\n    } else {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, message } = this.props;\r\n\r\n    if (isLoggedIn) {\r\n      return <Redirect to=\"/profile\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={(c) => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"username\"\r\n                value={this.state.username}\r\n                onChange={this.onChangeUsername}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Login</span>\r\n              </button>\r\n            </div>\r\n\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={(c) => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn } = state.auth;\r\n  const { message } = state.message;\r\n  return {\r\n    isLoggedIn,\r\n    message\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Login);\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  SET_MESSAGE,\r\n} from \"./types\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nexport const register = (username, email, password) => (dispatch) => {\r\n  return AuthService.register(username, email, password).then(\r\n    (response) => {\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: response.data.message,\r\n      });\r\n\r\n      return Promise.resolve();\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: message,\r\n      });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\nexport const login = (username, password) => (dispatch) => {\r\n  return AuthService.login(username, password).then(\r\n    (data) => {\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: { user: data },\r\n      });\r\n\r\n      return Promise.resolve();\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n      });\r\n\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: message,\r\n      });\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  AuthService.logout();\r\n\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { register } from \"../actions/auth\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = (value) => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = (value) => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = (value) => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      successful: false,\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      successful: false,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      this.props\r\n        .dispatch(\r\n          register(this.state.username, this.state.email, this.state.password)\r\n        )\r\n        .then(() => {\r\n          this.setState({\r\n            successful: true,\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            successful: false,\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { message } = this.props;\r\n\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={(c) => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Username</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeUsername}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div className={ this.state.successful ? \"alert alert-success\" : \"alert alert-danger\" } role=\"alert\">\r\n                  {message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={(c) => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { message } = state.message;\r\n  return {\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Register);\r\n","export default function authHeader() {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n  if (user && user.accessToken) {\r\n    // for Node.js Express back-end\r\n    return { 'x-access-token': user.accessToken };\r\n  } else {\r\n    return {};\r\n    // return { 'x-access-token': user.accessToken };\r\n  }\r\n}\r\n","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = 'http://localhost:8080/api/test/';\r\n\r\nclass UserService {\r\n  getPublicContent() {\r\n    return axios.get(API_URL + 'all');\r\n  }\r\n\r\n  getUserBoard() {\r\n    return axios.get(API_URL + 'user', { headers: authHeader() });\r\n  }\r\n\r\n  getModeratorBoard() {\r\n    return axios.get(API_URL + 'mod', { headers: authHeader() });\r\n  }\r\n\r\n  getAdminBoard() {\r\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getPublicContent().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response && error.response.data) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Profile extends Component {\r\n\r\n  render() {\r\n    const { user: currentUser } = this.props;\r\n\r\n    if (!currentUser) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>\r\n            <strong>{currentUser.username}</strong> Profile\r\n          </h3>\r\n        </header>\r\n        <p>\r\n          <strong>Token:</strong> {currentUser.accessToken.substring(0, 20)} ...{\" \"}\r\n          {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\r\n        </p>\r\n        <p>\r\n          <strong>Id:</strong> {currentUser.id}\r\n        </p>\r\n        <p>\r\n          <strong>Email:</strong> {currentUser.email}\r\n        </p>\r\n        <strong>Authorities:</strong>\r\n        <ul>\r\n          {currentUser.roles &&\r\n            currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { user } = state.auth;\r\n  return {\r\n    user,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Profile);\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class BoardUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getUserBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class BoardUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getModeratorBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class BoardUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getAdminBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nexport const history = createBrowserHistory();\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport Login from \"./components/login.component\";\nimport Register from \"./components/register.component\";\nimport Home from \"./components/home.component\";\nimport Profile from \"./components/profile.component\";\nimport BoardUser from \"./components/board-user.component\";\nimport BoardModerator from \"./components/board-moderator.component\";\nimport BoardAdmin from \"./components/board-admin.component\";\n\nimport { logout } from \"./actions/auth\";\nimport { clearMessage } from \"./actions/message\";\n\nimport { history } from './helpers/history';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      showModeratorBoard: false,\n      showAdminBoard: false,\n      currentUser: undefined,\n    };\n\n    history.listen((location) => {\n      props.dispatch(clearMessage()); // clear message when changing location\n    });\n  }\n\n  componentDidMount() {\n    const user = this.props.user;\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n        showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\n      });\n    }\n  }\n\n  logOut() {\n    this.props.dispatch(logout());\n  }\n\n  render() {\n    const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\n\n    return (\n      <Router history={history}>\n        <div>\n          <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n            <Link to={\"/\"} className=\"navbar-brand\">\n              bezKoder\n            </Link>\n            <div className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/home\"} className=\"nav-link\">\n                  Home\n                </Link>\n              </li>\n\n              {showModeratorBoard && (\n                <li className=\"nav-item\">\n                  <Link to={\"/mod\"} className=\"nav-link\">\n                    Moderator Board\n                  </Link>\n                </li>\n              )}\n\n              {showAdminBoard && (\n                <li className=\"nav-item\">\n                  <Link to={\"/admin\"} className=\"nav-link\">\n                    Admin Board\n                  </Link>\n                </li>\n              )}\n\n              {currentUser && (\n                <li className=\"nav-item\">\n                  <Link to={\"/user\"} className=\"nav-link\">\n                    User\n                  </Link>\n                </li>\n              )}\n            </div>\n\n            {currentUser ? (\n              <div className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <Link to={\"/profile\"} className=\"nav-link\">\n                    {currentUser.username}\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\n                    LogOut\n                  </a>\n                </li>\n              </div>\n            ) : (\n              <div className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <Link to={\"/login\"} className=\"nav-link\">\n                    Login\n                  </Link>\n                </li>\n\n                <li className=\"nav-item\">\n                  <Link to={\"/register\"} className=\"nav-link\">\n                    Sign Up\n                  </Link>\n                </li>\n              </div>\n            )}\n          </nav>\n\n          <div className=\"container mt-3\">\n            <Switch>\n              <Route exact path={[\"/\", \"/home\"]} component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/register\" component={Register} />\n              <Route exact path=\"/profile\" component={Profile} />\n              <Route path=\"/user\" component={BoardUser} />\n              <Route path=\"/mod\" component={BoardModerator} />\n              <Route path=\"/admin\" component={BoardAdmin} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { user } = state.auth;\n  return {\n    user,\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"./types\";\r\n\r\nexport const setMessage = (message) => ({\r\n  type: SET_MESSAGE,\r\n  payload: message,\r\n});\r\n\r\nexport const clearMessage = () => ({\r\n  type: CLEAR_MESSAGE,\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can chađinge\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}